// Layout
// ========================================

// Image replacement

.ir,
%ir
  color: transparent
  font: 0/0 a
  text-shadow: none

// Clearfix

.group,
%group
  &:before,
  &:after
    @extend %content-empty
    display: table
  &:after
    clear: both

// Borders

%border-gray-light
  border-color: $gray-light

%border-1
  +rem(border-width, 1px)

%border-solid
  border-style: solid

%border-base
  @extend %border-gray-light
  @extend %border-1
  @extend %border-solid

%border-radius-base
  +rem(border-radius, $border-radius-base)

// Alignments

@each $align in $alignments
  %vertical-align-#{$align}
    vertical-align: $align

// Displays

@each $display in $displays
  %display-#{$display}
    display: $display

// Floats

@each $float in $floats
  %pull-#{$float}
    float: $float

// Overflows

@each $overflow in $overflows
  %overflow-#{$overflow}
    overflow: $overflow

// Positions

@each $position in $positions
  %position-#{$position}
    position: $position

// Box models
// ========================================

@each $zero in $zeros
  %#{$zero}-0
    #{$zero}: 0

%margin-auto
  margin: 0 auto

// Baseline surgical classes
// ========================================

@each $baseline, $i in $baselines

  %line-height-#{$baseline}
    +rem(line-height, $i)
    
  @if $baseline == base

    %margin-bottom
      +rem(margin-bottom, $i)

    %margin-top
      +rem(margin-top, $i)

    %padding-bottom
      +rem(padding-bottom, $i)

    %padding-top
      +rem(padding-top, $i)

  @else

    %margin-bottom-#{$baseline}
      +rem(margin-bottom, $i)

    %margin-top-#{$baseline}
      +rem(margin-top, $i)

    %padding-bottom-#{$baseline}
      +rem(padding-bottom, $i)

    %padding-top-#{$baseline}
      +rem(padding-top, $i)

// Gutter surgical classes
// ========================================

@each $gutter, $i in $gutters
  @if $gutter == base

    %margin-left
      +rem(margin-left, $i)

    %margin-right
      +rem(margin-right, $i)

    %padding-left
      +rem(padding-left, $i)

    %padding-right
      +rem(padding-right, $i)

  @else

    %margin-left-#{$gutter}
      +rem(margin-left, $i)

    %margin-right-#{$gutter}
      +rem(margin-right, $i)

    %padding-left-#{$gutter}
      +rem(padding-left, $i)

    %padding-right-#{$gutter}
      +rem(padding-right, $i)

// Full boxes
// ========================================

%padding-gutters
  @extend %padding-right
  @extend %padding-left
  
%padding-baselines
  @extend %padding-top
  @extend %padding-bottom

%padding-box
  @extend %padding-gutters
  @extend %padding-baselines

%margin-gutters
  @extend %margin-right
  @extend %margin-left
  
%margin-baselines
  @extend %margin-top
  @extend %margin-bottom

%margin-box
  @extend %margin-gutters
  @extend %margin-baselines

// Grid system
// ========================================

.grid,
%grid
  list-style: none
  +rem(letter-spacing, -4px)

.opera:-o-prefocus,
.grid
  +rem(word-spacing, -5px)

.grid-col,
%grid-col
  @extend %display-inline-block
  *display: inline
  letter-spacing: normal
  vertical-align: top
  white-space: normal
  zoom: 1

// Grid widths
// ========================================

$columns: 12

// Counting down from 12, for 12 columns
@while 1 <= $columns
  
  // Counting up to the given potential number of columns in a given row
  @for $column from 1 to $columns
  
    // Extend multiples of 2, 3, 5, or compile the class
    @if ($column % 2 == 0) and ($columns % 2 == 0)
    
      .grid-#{$column}-#{$columns},
      %grid-#{$column}-#{$columns}
        @extend %grid-#{$column/2}-#{$columns/2}
    
    @else if ($column % 3 == 0) and ($columns % 3 == 0)
    
      .grid-#{$column}-#{$columns},
      %grid-#{$column}-#{$columns}
        @extend %grid-#{$column/3}-#{$columns/3}

    @else if ($column % 5 == 0) and ($columns % 5 == 0)
    
      .grid-#{$column}-#{$columns},
      %grid-#{$column}-#{$columns}
        @extend %grid-#{$column/5}-#{$columns/5}
        
    @else
  
      .grid-#{$column}-#{$columns},
      %grid-#{$column}-#{$columns}
        width: ($column/$columns) * 100%
    
  $columns: $columns - 1

.grid-1-1,
%grid-1-1
  width: 100%
